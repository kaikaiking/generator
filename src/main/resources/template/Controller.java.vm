package ${package}.controller;

import java.util.List;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import lombok.extern.slf4j.Slf4j;

import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import ${utils}.PageUtils;
import ${utils}.Query;
import ${utils}.Result;


/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Slf4j
@RestController
@RequestMapping("${pathName}")
public class ${className}Controller extends BaseController{
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    public Result list(@RequestParam Map<String, Object> params){
        Query query = new Query(params);
        Page page = ${classname}Service.queryListPage(query);
        PageUtils pageUtil = new PageUtils(page.getResult(), page.getTotal(), page.getPageSize(), page.getPageNum());
        return Result.ok().put("page",pageUtil);
    }


    /**
     * 信息
     */
    @RequestMapping("/info/{${pk.attrname}}")
    public Result info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
        ${className}Entity ${classname} = ${classname}Service.queryObject(${pk.attrname});

        return Result.ok().put("${classname}", ${classname});
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    public Result save(@RequestBody ${className}Entity ${classname}){
        ${classname}Service.save(${classname});

        return Result.ok();
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    public Result update(@RequestBody ${className}Entity ${classname}){
        ${classname}Service.update(${classname});

        return Result.ok();
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    public Result delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
        ${classname}Service.deleteBatch(${pk.attrname}s);

        return Result.ok();
    }

}
